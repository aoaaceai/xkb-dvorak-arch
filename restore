#!/usr/bin/python3
def main():
	file = open('/usr/share/X11/xkb/symbols/us', 'r+')
	text = file.read()
	begin, end = findBrackets(text)
	replaced = text[:begin] + data + text[end:]
	file.truncate(0)
	file.seek(0, 0)
	file.write(replaced)


def findBrackets(text):
	level = 0
	begin, end = -1, -1
	for i, c in enumerate(text):
		if c == '{':
			level += 1

			if begin < 0:
				begin = i+1

		elif c == '}':
			level -= 1

			if level == 0:
				end = i
				break

	return begin, end if end != -1 else (-1, -1)

data = r"""
    name[Group1]= "English (US)";
    key <TLDE> {    [        grave,    asciitilde  ]    };
    key <AE01> {    [            1,    exclam      ]    };
    key <AE02> {    [            2,    at          ]    };
    key <AE03> {    [            3,    numbersign  ]    };
    key <AE04> {    [            4,    dollar      ]    };
    key <AE05> {    [            5,    percent     ]    };
    key <AE06> {    [            6,    asciicircum ]    };
    key <AE07> {    [            7,    ampersand   ]    };
    key <AE08> {    [            8,    asterisk    ]    };
    key <AE09> {    [            9,    parenleft   ]    };
    key <AE10> {    [            0,    parenright  ]    };
    key <AE11> {    [  bracketleft,    braceleft   ]    };
    key <AE12> {    [ bracketright,    braceright  ]    };
    key <AD01> {    [   apostrophe,    quotedbl    ]    };
    key <AD02> {    [        comma,    less        ]    };
    key <AD03> {    [       period,    greater     ]    };
    key <AD04> {    [            p,    P           ]    };
    key <AD05> {    [            y,    Y           ]    };
    key <AD06> {    [            f,    F           ]    };
    key <AD07> {    [            g,    G           ]    };
    key <AD08> {    [            c,    C           ]    };
    key <AD09> {    [            r,    R           ]    };
    key <AD10> {    [            l,    L           ]    };
    key <AD11> {    [        slash,    question    ]    };
    key <AD12> {    [        equal,    plus        ]    };
    key <AC01> {    [            a,    A           ]    };
    key <AC02> {    [            o,    O           ]    };
    key <AC03> {    [            e,    E           ]    };
    key <AC04> {    [            u,    U           ]    };
    key <AC05> {    [            i,    I           ]    };
    key <AC06> {    [            d,    D           ]    };
    key <AC07> {    [            h,    H           ]    };
    key <AC08> {    [            t,    T           ]    };
    key <AC09> {    [            n,    N           ]    };
    key <AC10> {    [            s,    S           ]    };
    key <AC11> {    [        minus,    underscore  ]    };
    key <AB01> {    [    semicolon,    colon       ]    };
    key <AB02> {    [            q,    Q           ]    };
    key <AB03> {    [            j,    J           ]    };
    key <AB04> {    [            k,    K           ]    };
    key <AB05> {    [            x,    X           ]    };
    key <AB06> {    [            b,    B           ]    };
    key <AB07> {    [            m,    M           ]    };
    key <AB08> {    [            w,    W           ]    };
    key <AB09> {    [            v,    V           ]    };
    key <AB10> {    [            z,    Z           ]    };
    key <BKSL> {    [    backslash,    bar         ]    };
"""

if __name__ == '__main__':
	main()
